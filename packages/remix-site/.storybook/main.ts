import type { StorybookConfig } from "@storybook/react-vite";
import tsconfigPaths from "vite-tsconfig-paths";
import wasm from "vite-plugin-wasm";
import { muteWarningsPlugin } from "../configuration/MuteWarnings";
import { join, dirname } from "path";

/**
 * This function is used to resolve the absolute path of a package.
 * It is needed in projects that use Yarn PnP or are set up within a monorepo.
 */
function getAbsolutePath(value: string): any {
  return dirname(require.resolve(join(value, "package.json")));
}
const config: StorybookConfig = {
  stories: [
    "../stories/**/*.mdx",
    "../stories/**/*.stories.@(js|jsx|mjs|ts|tsx)",
    "../**/*.stories.tsx",
    // Mdx docs generated by storybook
    "../**/*.doc.mdx",
  ],
  addons: [
    getAbsolutePath("@storybook/addon-onboarding"),
    getAbsolutePath("@storybook/addon-links"),
    getAbsolutePath("@storybook/addon-essentials"),
    getAbsolutePath("@storybook/addon-interactions"),
    "@storybook/addon-themes",
    //  '@storybook/addon-docs',
    // { // Generates mdx docs based on jsdoc
    //   name: 'storybook-addon-jsdoc-to-mdx',
    //   options: {
    //     folderPaths: ['app/*','./stories/','./app/**/*', './configuration/'], // paths to folders with JS/TS code
    //     extensions: ['ts', 'js', 'tsx'] // file extensions to include
    //   }
    // }
  ],
  core: {
    disableTelemetry: true, // ðŸ‘ˆ Disables telemetry
  },
  framework: {
    name: getAbsolutePath("@storybook/react-vite"),
    options: {},
  },
};
export default config;
